@model TransaccionCreacionViewModel

@{
    ViewData["Title"] = "Crear Transaccion";
}

<h1>Crear Transaccion</h1>

<h5>Una transaccion te permite indicar tus ingresos y gastos</h5>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Crear">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3  form-group">
                <label asp-for="FechaTransaccion" class="control-label"></label>
                <input asp-for="FechaTransaccion" class="form-control" />
                <span asp-validation-for="FechaTransaccion" class="text-danger"></span>
            </div>

            <div class="mb-3 form-group">
                <label asp-for="CuentaId" class="fcontrol-label"></label>
                <select asp-for="CuentaId" asp-items="Model.Cuentas" class="form-select"></select>
                <span asp-validation-for="CuentaId" class="text-danger"></span>
            </div>

            <div class="mb-3 form-group">
                <label asp-for="TipoOperacionId" class="control-label"></label>
                <select asp-for="TipoOperacionId" asp-items="Html.GetEnumSelectList<TipoOperacion>()" class="form-select"></select>
                <span asp-validation-for="TipoOperacionId" class="text-danger"></span>
            </div>
            <div class="mb-3 form-group">
                <label asp-for="CategoriaId" class="control-label"></label>
                <select asp-for="CategoriaId" asp-items="Model.Categorias" class="form-select"></select>
                <span asp-validation-for="CategoriaId" class="text-danger"></span>
            </div>
            <div class="mb-3 form-group">
                <label asp-for="Monto" class="control-label"></label>
                <input asp-for="Monto" class="form-control" />
                <span asp-validation-for="Monto" class="text-danger"></span>
            </div>
            <div class="mb-3 form-group">
                <label asp-for="Nota" class="control-label"></label>
                <textarea asp-for="Nota" class="form-control"></textarea>
                <span asp-validation-for="Nota" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        //creamos una cosntante, donde indicaremso la url o el endpoint
        const urlObtenerCategorias = '@Url.Action("ObtenerCategorias")';
        //funcion, creada para usar el los desplegables en cascada
        $(function () {
            //este campo es el id de la cascada
            $("#TipoOperacionId").change(async function () {
                const valorseleccionado = $(this).val();
                //enviamso la url, y usamos fetch, que es la que usa javascript para consumir apis o url
                //almacenamos el valor de la repsuesta del webapi
                const respuesta = await fetch(urlObtenerCategorias, {
                    method: 'POST',
                    body: valorseleccionado,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const json = await respuesta.json();
                //console.log(json);
                //una vez verificada que la informacion llea de forma correcta, realizaremso el mapeo
                //de todo el json que nos devuelve para pdoer asi cambiar en la vista en el desplegable
                //transofrmandolas en opciones, osea un arreglo de opciones
                const opciones = 
                    json.map(categoria => `<option value=${categoria.value}>${categoria.text}</option>`);
                //insertamos nuestro arreglo de opciones en el html
                    $("#CategoriaId").html(opciones);
            })
        })
    </script>

}
